{
  "name": "odoo-instance-manager",
  "displayName": "Odoo instance manager",
  "author": {
    "name": "Manuel Jes√∫s (AnesCDev)"
  },
  "description": "This extension give to the developer a ease way to create and manage Odoo Community Edition Instances for the version 15, 16 and 17",
  "version": "0.1.0",
  "publisher": "Anestion",
  "license": "BSD-3-Clause",
  "keywords": ["odoo", "instances", "odoo instances", "odoo development"],
  "engines": {
    "vscode": "^1.81.0"
  },
  "l10n": "./l10n",
  "galleryBanner": {
    "theme": "light",
    "color": "#242424"
  },
  "categories": [
    "Other",
    "Visualization"
  ],
  "activationEvents": [
    "onView:oim-view-container"
  ],
  "homepage": "https://github.com/Anestion/odoo-instance-manager",
  "repository": {
    "type": "git",
    "url": "https://github.com/Anestion/odoo-instance-manager"
  },
  "bugs": {
    "email": "anescdev@gmail.com",
    "url": "https://github.com/Anestion/odoo-instance-manager/issues"
  },
  "pricing": "Free",
  "main": "./out/extension.js",
  "icon": "./resources/img/icon.png",
  "preview": true,
  "contributes": {
    "configuration": {
      "title": "Odoo instance manager"
    },
    "commands": [
      {
        "command": "oim.refresh",
        "title": "%oim.refresh.title%",
        "icon": "$(refresh)",
        "enablement": "oim.startedDocker == false"
      },
      {
        "command": "oim.instance.create",
        "title": "%oim.instance.create.title%",
        "icon": "$(add)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.refresh",
        "title": "%oim.instance.refresh.title%",
        "icon": "$(refresh)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.delete",
        "title": "%oim.instance.delete.title%",
        "icon": "$(trash)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.open",
        "title": "%oim.instance.open.title%",
        "icon": "$(globe)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.openShell",
        "title": "%oim.instance.openShell.title%",
        "icon": "$(terminal)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.start",
        "title": "%oim.instance.start.title%",
        "icon": "$(debug-start)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.stop",
        "title": "%oim.instance.stop.title%",
        "icon": "$(debug-stop)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.instance.module.openFolder",
        "title": "%oim.instance.module.openFolder.title%",
        "icon": "$(folder)",
        "enablement": "oim.startedDocker == true"
      },
      {
        "command": "oim.postgresql.statusbar",
        "title": "%oim.postgresql.statusbar.title%",
        "icon": "$(database)",
        "enablement": "oim.startedDocker == true"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "oim-view-container",
          "title": "%oim.view.container.title%",
          "icon": "resources/svg/view_container_instance_icon.svg"
        }
      ]
    },
    "views": {
      "oim-view-container": [
        {
          "id": "oim.instances.view",
          "name": "%oim.instances.view.name%",
          "contextualTitle": "%oim.instances.view.contextualTitle%"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "oim.instances.view",
        "contents": "%oim.instances.view.welcome.dockerStarted%",
        "when": "oim.startedDocker == true"
      },
      {
        "view": "oim.instances.view",
        "contents": "%oim.instances.view.welcome.dockerNotStarted%",
        "when": "oim.startedDocker == false"
      },
      {
        "view": "oim.instances.view",
        "contents": "%oim.instances.view.welcome.loading%",
        "when": "oim.startedDocker == null"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "oim.refresh",
          "when": "oim.startedDocker == false && view == oim.instances.view",
          "group": "navigation"
        },
        {
          "command": "oim.instance.create",
          "when": "oim.startedDocker == true && view == oim.instances.view",
          "group": "navigation"
        },
        {
          "command": "oim.instance.refresh",
          "when": "oim.startedDocker == true && view == oim.instances.view",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "oim.instance.module.openFolder",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/",
          "group": "inline"
        },
        {
          "command": "oim.instance.start",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/ && viewItem not in oim.startedInstances",
          "group": "inline"
        },
        {
          "command": "oim.instance.stop",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/ && viewItem in oim.startedInstances",
          "group": "inline"
        },
        {
          "command": "oim.instance.open",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/ && viewItem in oim.startedInstances",
          "group": "inline"
        },
        {
          "command": "oim.instance.openShell",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/ && viewItem in oim.startedInstances",
          "group": "inline"
        },
        {
          "command": "oim.instance.delete",
          "when": "view == oim.instances.view && viewItem =~ /^instanceOdoo_.+$/",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.81.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/test-electron": "^2.3.4",
    "eslint": "^8.47.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "tsx": "^4.7.1",
    "typescript": "^5.1.6"
  }
}
